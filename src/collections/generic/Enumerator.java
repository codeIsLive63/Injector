package collections.generic;

import java.util.Iterator;

/**
 * Представляет перечислитель для набора элементов типа T.
 *
 * @param <T> Тип элементов в перечислителе.
 */
public interface Enumerator<T> {

    /**
     * Перемещает перечислитель к следующему элементу коллекции.
     *
     * @return {@code true}, если перечислитель успешно продвинулся к следующему элементу;
     * {@code false}, если перечислитель прошел конец коллекции.
     */
    boolean moveNext();

    /**
     * Получает текущий элемент в коллекции.
     *
     * @return Текущий элемент коллекции.
     * @throws java.util.NoSuchElementException Если перечислитель расположен перед первым элементом
     * коллекции или после последнего элемента.
     */
    T getCurrent();

    /**
     * Сбрасывает перечислитель в исходное положение, которое находится перед первым элементом в коллекции.
     */
    void reset();

    /**
     * Возвращает итератор по элементам в этом перечислителе.
     * Возвращаемый итератор эквивалентен перечислителю и поддерживает те же операции.
     * Это позволяет использовать перечислитель в циклах for-each (улучшенные циклы for).
     *
     * @return Итератор по элементам в этом перечислителе.
     */
    default Iterator<T> asIterator() {
        return new Iterator<>() {
            @Override
            public boolean hasNext() {
                return moveNext();
            }

            @Override
            public T next() {
                return getCurrent();
            }
        };
    }
}
